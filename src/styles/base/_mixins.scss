@use '../base/typography' as typ;

@mixin typography($variant) {
    @if map-has-key(typ.$typography, $variant){
        font-family: map-get(map-get(typ.$typography, $variant), fontFamily) !important;
        font-weight: map-get(map-get(typ.$typography, $variant), fontWeight) !important;
        font-size: map-get(map-get(typ.$typography, $variant), fontSize) !important;
        line-height: map-get(map-get(typ.$typography, $variant), lineHeight) !important;
        letter-spacing: map-get(map-get(typ.$typography, $variant), letterSpacing) !important;
    } @else {
        @warn "`#{$variant}` does not match the available typography variants";
    }
}

@function breakpoints($size) {
    @if map-has-key($breakpoints, $size){
        @return map-get($breakpoints, $size);
    }
    @warn "`#{$size}` does not match the available breakpoint values (xs, sm, md, lg, xl)";
    @return null;
}

@function palette($type, $value) {
    @if map-has-key($palette, $type) {
        $type: map-get($palette, $type);
            @if map-has-key($type, $value){
                @return map-get($type, $value);
            }
            @warn "`#{$value}` does not exist in light palette type";
            @return null;        
    }
    @warn "`#{$color}` does not exist in light palette";
    @return null;
}

@function shadows($depth) {
    @if map-has-key($shadows, $depth){
        @return map-get($shadows, $depth);
    } @else {
        @warn "`#{$depth}` does not match the available shadow levels (0-24)";
        @return null;
    }
}

@function shape($attribute) {
    $shape: map-get($theme, shape);
    @if map-has-key($shape, $attribute){
        @return map-get($shape, $attribute);
    }
    @warn "`#{$attribute}` is not an attribute of shape";
    @return null;
}